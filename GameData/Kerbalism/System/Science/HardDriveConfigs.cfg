// ============================================================================
// KERBALISM_HDD_SIZES - Temporary tweaking values
// ============================================================================
// Tweaking hints
//
// data - baseline size in Mb (keep in mind it gets 4 big upgrades, don't go overboard)
// samples - sample slots. this one is counter-intuitive, as most experiments
// occupy multiple slots per run. Slot size is tied to data scales in kerbalism's
// back-end, and samples have large data values for lab analysis purposes.
// ============================================================================
// Change values here, they'll get copied and patched later in this file.
// Anything that modifies tech tree positions
// (such as unmanned tech trees, or Probes Before Crew for example)
// will need a patch to balance these values, otherwise they make no sense.
// Patching mods that add a ton of command modules is a nightmare.
// General balancing idea: based on unlock tiers. Probes get on average
// 1.5 - 2 times more data storage due to lack of sample storage.
// ============================================================================
// HDD Upgrades at : T1, T4, T6, T8 	- 		2-8-64-512		(times the base value)
// Sample Upgrades at: T3, T6			-		2-7				(times the base value)
KERBALISM_HDD_SIZES
{
// ====================================================================================================================================================================================================================================
													//MAKE SURE NO FIELDS ARE LEFT EMPTY OR COMMENTED OUT IN THIS SECTION, OTHERWISE MM WILL THROW ERRORS
// ====================================================================================================================================================================================================================================

	tiros-1
	{
		data = 0.0001
		samples = 0
	}

	vanguard-2
	{
		data = 0.0005
		samples = 0
	}

	vanguard-3
	{
		data = 0.0005
		samples = 0
	}

	RO_earlyControllableCore
	{
		data = 0.001
		samples = 0
	}

	RO_probeCoreCubeEarly
	{
		data = 0.01
		samples = 0
	}

	KV3Pomegranate									//T4
	{
		data = 2.25
		samples = 2
	}

	MK1InlineCockpit								//T4
	{
		data = 2.25
		samples = 1
	}

	MK1LanderCan									//T4
	{
		data = 2.5
		samples = 5
	}

	MK2Pod											//T4
	{
		data = 2.5
		samples = 3
	}

	OKTO											//T4
	{
		data = 3
		samples = 0
	}

	MK1-3Pod										//T5
	{
		data = 4.25
		samples = 1
	}

	MK2Cockpit										//T5
	{
		data = 4.25
		samples = 2
	}

	MK2LanderCan									//T5
	{
		data = 4.25
		samples = 6
	}

	MEM												//T5
	{
		data = 4.25
		samples = 12
	}

	PPD12Cupola										//T5
	{
		data = 0
		samples = 0
	}

	HECS											//T5
	{
		data = 5.5
		samples = 0
	}

	MK2InlineCockpit								//T6
	{
		data = 4
		samples = 2
	}

	MK3Cockpit										//T6
	{
		data = 8
		samples = 8
	}

	OKTO2											//T6
	{
		data = 8									//much smaller than the Base Okto, but more advanced tech.
		samples = 0
	}

	QBE												//T6
	{
		data = 4
		samples = 0
	}

	RoveMate										//T6
	{
		data = 4
		samples = 3									//only probe that can store samples?
	}

	MK2DroneCore									//T7
	{
		data = 4
		samples = 0
	}

	HECS2											//T7
	{
		data = 4
		samples = 0
	}

	RC-001S											//T7
	{
		data = 4
		samples = 0
	}

	RC-L01											//T8
	{
		data = 8								//best probe in the game. it better store a crapton of data.
		samples = 0
	}

	ScienceLabs										//snowflake
	{
		data = 256
		samples = 8
	}

	ScienceBox										//snowflake
	{
		data = 0
		samples = 8
	}

	PRIVATE_DRIVES									//this is internal storage for samples.
	{												//It can only store samples for the experiment it's attached to
		MysteryGoo
		{
			data = 0
			samples = 1
			SampleReservoirUpgrade = 3				//multiplier (this is the number of times it can run before needing a reset)
			UpgradeTech = basicScience
			UpgradeEntryCost = 1600
		}

		MaterialsBay
		{
			data = 0
			samples = 2								//this has to be equal to the sample size.
			SampleReservoirUpgrade = 3				//multiplier (this is the number of times it can run before needing a reset)
		}

		SpectroVariometer
		{
			data = 0
			samples = 7								// atmo sample has a size of 7 slots currently.
		}

		Drills										//Unused till drill check is implemented.
		{
			data = 0
			samples = 1
		}
	}
}

// ====================================================================================================================================================================================================================================
// ====================================================================================================================================================================================================================================
															//THERE IS NOTHING TO BE TWEAKED FURTHER. ALL CHANGES SHOULD BE DONE ABOVE THIS TEXT!
// ====================================================================================================================================================================================================================================
// ====================================================================================================================================================================================================================================

// ============================================================================
// Remove stock science data containers, add hard-drives/sample containers instead
// Setting default drive sizes for all parts, even modded ones
// modded parts will need separate tweaks in their own configs
// ============================================================================
@PART[*]:HAS[@MODULE[ModuleScienceContainer]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	!MODULE[ModuleScienceContainer] {}
}

@PART[*]:HAS[@MODULE[ModuleCommand]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	MODULE
	{
		name = HardDrive
		title = Command Module Storage
		dataCapacity = 0.00001      // data size in Mb
		sampleCapacity = 0      // sample size in slots
	}
}
// ============================================================================
// Adding HardDrive module for snowflakes so they can get patched.
// ============================================================================
@PART[*]:HAS[@MODULE[Laboratory]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	MODULE
	{
		name = HardDrive
	}
}

@PART[ScienceBox,kerbalEVA*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	MODULE
	{
		name = HardDrive
	}
}
// ============================================================================
// Remove the ability for probe cores to store samples.
// ============================================================================
@PART[*]:HAS[@MODULE[ModuleCommand]:HAS[#minimumCrew[0]]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@sampleCapacity = 0
	}
}

// ============================================================================
// Individual part patches. Copies the values from above.
// Stop scrolling, there's not much you can fiddle with further.
// Do Not Touch! (please?)
// ============================================================================
@PART[tiros-1]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/tiros-1/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/tiros-1/samples$
	}
}

@PART[vanguard-2]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/vanguard-2/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/vanguard-2/samples$
	}
}

@PART[vanguard-3]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/vanguard-3/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/vanguard-3/samples$
	}
}

@PART[kv3Pod]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/KV3Pomegranate/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/KV3Pomegranate/samples$
	}
}

@PART[RO_probeCoreCubeEarly]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RO_probeCoreCubeEarly/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RO_probeCoreCubeEarly/samples$
	}
}

@PART[Mark2Cockpit]:NEEDS[FeatureScience]:FOR[Kerbalism]		//because that part name makes sense.
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK1InlineCockpit/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK1InlineCockpit/samples$
	}
}

@PART[landerCabinSmall]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK1LanderCan/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK1LanderCan/samples$
	}
}

@PART[mk1-3pod]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK1-3Pod/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK1-3Pod/samples$
	}
}

@PART[mk2Cockpit_Standard]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2Cockpit/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2Cockpit/samples$
	}
}

@PART[mk2Cockpit_Inline]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2InlineCockpit/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2InlineCockpit/samples$
	}
}

@PART[Mk2Pod]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2Pod/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2Pod/samples$
	}
}

@PART[mk2DroneCore]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2DroneCore/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2DroneCore/samples$
	}
}

@PART[mk2LanderCabin*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK2LanderCan/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK2LanderCan/samples$
	}
}

@PART[mk3Cockpit_Shuttle]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MK3Cockpit/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MK3Cockpit/samples$
	}
}

@PART[MEMLander]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/MEM/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/MEM/samples$
	}
}

@PART[cupola]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/PPD12Cupola/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/PPD12Cupola/samples$
	}
}

@PART[probeCoreHex]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/HECS/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/HECS/samples$
	}
}

@PART[probeCoreHex_v2]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/HECS2/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/HECS2/samples$
	}
}

@PART[probeCoreOcto*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/OKTO/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/OKTO/samples$
	}
}

@PART[probeCoreOcto2*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/OKTO2/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/OKTO2/samples$
	}
}

@PART[probeCoreCube]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/QBE/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/QBE/samples$
	}
}

@PART[roverBody*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RoveMate/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RoveMate/samples$
	}
}

@PART[RO_earlyControllableCore]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RO_earlyControllableCore/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RO_earlyControllableCore/samples$
	}
}

@PART[probeStackSmall]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RC-001S/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RC-001S/samples$
	}
}

@PART[probeStackLarge]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		@dataCapacity = #$@KERBALISM_HDD_SIZES/RC-L01/data$
		@sampleCapacity = #$@KERBALISM_HDD_SIZES/RC-L01/samples$
	}
}

@PART[kerbalEVA*]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		%title = EVA Storage
		%dataCapacity = #$@KERBALISM_HDD_SIZES/EVAKerbals/data$
		%sampleCapacity = #$@KERBALISM_HDD_SIZES/EVAKerbals/samples$
	}
}

@PART[*]:HAS[@MODULE[Laboratory]]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		%title = Laboratory Storage
		%dataCapacity = #$@KERBALISM_HDD_SIZES/ScienceLabs/data$
		%sampleCapacity = #$@KERBALISM_HDD_SIZES/ScienceLabs/samples$
	}
}

@PART[ScienceBox]:NEEDS[FeatureScience]:FOR[Kerbalism]
{
	@MODULE[HardDrive]
	{
		%title = Sample Container Storage
		%dataCapacity = #$@KERBALISM_HDD_SIZES/ScienceBox/data$
		%sampleCapacity = #$@KERBALISM_HDD_SIZES/ScienceBox/samples$
	}
}
// ============================================================================
//HDD capacity/sample storage Upgrades.
// ============================================================================

PARTUPGRADE:NEEDS[FeatureScience]
{
  name = HDD-Upgrade1
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Engineers figured that if they add another platter to the drive, they can double the capacity!
}
@PARTUPGRADE[HDD-Upgrade1]:NEEDS[FeatureScience]
{
  @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FirstUpgradeTech$
  @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FirstUpgradeEntryCost$
}
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = HDD-Upgrade2
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = An increase in platter density equals an increase in capacity!
}
@PARTUPGRADE[HDD-Upgrade2]:NEEDS[FeatureScience]
{
  @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/SecondUpgradeTech$
  @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/SecondUpgradeEntryCost$
}
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = HDD-Upgrade3
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Converts all the old dusty Hard Drives to all new and shiny Solid State Drives!
}
@PARTUPGRADE[HDD-Upgrade3]:NEEDS[FeatureScience]
{
  @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/ThirdUpgradeTech$
  @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/ThirdUpgradeEntryCost$
}
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = HDD-Upgrade4
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = HDD Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Quantum physics shenenigans! It just works. Don't ask how.
}
@PARTUPGRADE[HDD-Upgrade4]:NEEDS[FeatureScience]
{
  @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FourthUpgradeTech$
  @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FourthUpgradeEntryCost$
}
// Applies upgrades to relevant parts (i'm aware 0*anything is still 0. let me be) - avoiding unnecessary upgrade spam on parts for no reason.
@PART[*]:HAS[@MODULE[HardDrive]:HAS[#dataCapacity[>0]]]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	@MODULE[HardDrive]
	{
		UPGRADES
		{
			UPGRADE
			{
				name__ = HDD-Upgrade1
				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FirstUpgradeTech$
				dataCapacity = #$../../#dataCapacity$
				@dataCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FirstUpgrade$
			}
			UPGRADE
			{
				name__ = HDD-Upgrade2
				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/SecondUpgradeTech$
				dataCapacity = #$../../#dataCapacity$
				@dataCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/SecondUpgrade$
			}
			UPGRADE
			{
				name__ = HDD-Upgrade3
				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/ThirdUpgradeTech$
				title = Solid State Drive
				dataCapacity = #$../../#dataCapacity$
				@dataCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/ThirdUpgrade$
			}
			UPGRADE
			{
				name__ = HDD-Upgrade4
				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FourthUpgradeTech$
				title = Quantum Data Drive
				dataCapacity = #$../../#dataCapacity$
				@dataCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/DATA_CAPACITY_MULTIPLIERS/FourthUpgrade$
			}
		}
	}
}

// ============================================================================
//Sample Capacity upgrades.
// ============================================================================
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = SampleCapacity-Upgrade1
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = Sample Storage Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Increase the total amount of sample storage
}
@PARTUPGRADE[SampleCapacity-Upgrade1]:NEEDS[FeatureScience]
{
  @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/SAMPLE_CAPACITY_MULTIPLIERS/FirstUpgradeTech$
  @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/SAMPLE_CAPACITY_MULTIPLIERS/FirstUpgradeEntryCost$
}
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = SampleCapacity-Upgrade2
  partIcon = ScienceBox
  techRequired = whatever
  entryCost = whatever
  title = Sample Storage Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Increase the total amount of sample storage
}
@PARTUPGRADE[SampleCapacity-Upgrade2]:NEEDS[FeatureScience]
{
  @techRequired = #$@KERBALISM_HDD_SIZES/Upgrades/SAMPLE_CAPACITY_MULTIPLIERS/SecondUpgradeTech$
  @entryCost = #$@KERBALISM_HDD_SIZES/Upgrades/SAMPLE_CAPACITY_MULTIPLIERS/SecondUpgradeEntryCost$
}
//applying upgrades to sample storage, avoiding probes.
@PART[*]:HAS[@MODULE[HardDrive]:HAS[#sampleCapacity[>0]]]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	@MODULE[HardDrive]
	{
		%UPGRADES
		{
			UPGRADE
			{
				name__ = SampleCapacity-Upgrade1
				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/SAMPLE_CAPACITY_MULTIPLIERS/FirstUpgradeTech$
				sampleCapacity = #$../../#sampleCapacity$
				@sampleCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/SAMPLE_CAPACITY_MULTIPLIERS/FirstUpgrade$
			}
			UPGRADE
			{
				name__ = SampleCapacity-Upgrade2
				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/Upgrades/SAMPLE_CAPACITY_MULTIPLIERS/SecondUpgradeTech$
				sampleCapacity = #$../../#sampleCapacity$
				@sampleCapacity *= #$../../../@KERBALISM_HDD_SIZES/Upgrades/SAMPLE_CAPACITY_MULTIPLIERS/SecondUpgrade$
			}
		}
	}
}
// ============================================================================
// Removing EVA Drive upgrades (they cannot work due to how stock handles the upgrades)
// They're harmless, but simply avoiding unnecessary upgrade spam.
// ============================================================================
@PART[kerbalEVA*]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	@MODULE[HardDrive]
	{
		!UPGRADES,*		{}
	}
}
// ============================================================================
// Internal(Private) Drive upgrades
// these have to be done by hand to avoid patching groups. (labs mainly)
// ============================================================================
// Goo
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = Goo-Storage-Upgrade
  partIcon = GooExperiment
  techRequired = whatever
  entryCost = whatever
  title =  Mystery Goo Sample Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Increase the total amount of sample storage for the Goo Experiment
}
//@PARTUPGRADE[Goo-Storage-Upgrade]:NEEDS[FeatureScience]
//{
  //@techRequired = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/UpgradeTech$
  //@entryCost = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/UpgradeEntryCost$
//}
@PART[GooExperiment|SXTProbeGooo]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = RP0bioScan1
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/samples$
	}
}
@PART[ROBioCapsule|sputnik2]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = RP0bioScan2
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/samples$
	}
}

// Materials Bay
PARTUPGRADE:NEEDS[FeatureScience]
{
  name = MatBay-Storage-Upgrade
  partIcon = science_module
  techRequired = whatever
  entryCost = whatever
  title = Materials Bay Sample Capacity Upgrade
  manufacturer = Spacegate Technology
  description = Increase the total amount of sample storage for the Materials Bay
}
@PART[science_module]:NEEDS[FeatureScience]:AFTER[Kerbalism]
{
	MODULE
	{
		name = HardDrive
		experiment_id = mobileMaterialsLab
		dataCapacity = 0
		sampleCapacity = #$@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MaterialsBay/samples$
	}
}
